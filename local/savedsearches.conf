[Generate pages]
alert.digest_mode = 1
search = eventtype=pageview \
    [| inputlookup WA_settings \
    | fields value \
    | dedup value \
    | rename value AS site] \
| top limit=100 http_request by site \
| fields site http_request \
| table site http_request \
| outputlookup WA_pages createinapp=t

[Generate pages - scheduled]
alert.digest_mode = 1
search = eventtype=pageview \
    [| inputlookup WA_settings \
    | fields value \
    | dedup value \
    | rename value AS site] \
| top limit=100 http_request by site \
| fields site http_request \
| table site http_request \
| outputlookup WA_pages createinapp=t

[Generate user sessions - scheduled]
alert.digest_mode = 1
search = | inputlookup WA_sessions \
| appendcols \
    [| tstats summariesonly=t max(_time) AS _time FROM datamodel=`datamodel` GROUPBY `datamodel`.http_session \
    | sort -_time \
    | head 1 \
    | rename _time AS datamodel_update_time \
    | fields datamodel_update_time] \
| appendcols \
    [| rest /servicesNS/-/-/data/models splunk_server=local search="acceleration=* eai:acl.app=SplunkAppForWebAnalytics" \
    | fields acceleration] \
| append \
    [ search eventtype=pageview _index_earliest=-20m@m _index_latest=now site=* \
    | eval time=_time \
    | eval http_referer = _time."_".http_referer \
    | eval http_referer_domain = _time."_".http_referer_domain \
    | eval http_referer_hostname = _time."_".http_referer_hostname \
    | fields _time time http_referer http_referer_domain http_referer_hostname site clientip http_user_agent http_request \
    | transaction site clientip http_user_agent maxpause=30m maxspan=4h keepevicted=f \
    | eval user=md5(clientip."_".http_user_agent) \
    | eval http_session=md5(clientip."_".http_user_agent."_"._time) \
    | stats first(site) as site,first(user) as user, first(time) AS http_session_start, last(time) AS http_session_end,count(http_request) AS http_session_pageviews,first(duration) as http_session_duration,first(http_referer) as http_session_referrer,first(http_referer_domain) as http_session_referrer_domain,first(http_referer_hostname) as http_session_referrer_hostname by _time,http_session \
    | search user=* \
    | eval http_session_referrer=replace(http_session_referrer,"^[0-9\.]*_","") \
    | eval http_session_referrer_domain=if(http_session_referrer="-","-",replace(http_session_referrer_domain,"^[0-9\.]*_","")) \
    | eval http_session_referrer_hostname=if(http_session_referrer="-","-",replace(http_session_referrer_hostname,"^[0-9\.]*_","")) \
    | dedup http_session \
    | lookup WA_channels Hostname AS http_session_referrer_hostname OUTPUT Channel AS http_session_channel \
    | eval http_session_channel=if(http_session_referrer="-","Direct", if(like(site,"%".http_session_referrer_domain),"Direct", if(isnull(http_session_channel) AND isnotnull(http_session), "Referal", http_session_channel))) ] \
| dedup http_session \
| filldown datamodel_update_time acceleration \
| where \
    (_time>=datamodel_update_time AND acceleration=1)\
    OR\
    (acceleration=1 AND isnull(datamodel_update_time))\
    OR\
    ((_time>relative_time(now(), "-1d@d")) AND (acceleration=0 OR acceleration='' OR isnull(acceleration))) \
| reverse \
| streamstats count \
| where count <1000000 \
| table acceleration,datamodel_update_time,count,_time,site,user,http_session,http_session_start,http_session_end,http_session_pageviews,http_session_duration,http_session_referrer,http_session_referrer_domain,http_session_referrer_hostname http_session_channel \
| outputlookup WA_sessions createinapp=t

[Top Accelerations By Size]
alert.track = 0
search = | rest /servicesNS/-/-/data/models splunk_server=local search="acceleration=* eai:acl.app=SplunkAppForWebAnalytics" \
| rename "acceleration.earliest_time" as Acceleration_Retention "eai:acl.app" as App "acceleration.cron_schedule" as Cron "acceleration" as Acceleration title AS Data_Model \
| table Data_Model App Acceleration Cron Acceleration_Retention updated \
| eval Cron=if(isnull(Cron),"",Cron) \
| map maxsearches=30 \
    search="| rest /servicesNS/nobody/$App$/admin/summarization/tstats:DM_$App$_$Data_Model$ splunk_server=local | fields summary* \
| rename summary.access_count AS "Access_Count" \
summary.access_time AS "Last_Access"\
summary.buckets AS "Buckets"\
summary.complete AS "Status"\
summary.size AS "Size_on_Disk_(Mb)"\
summary.last_error AS "Last_Error"\
summary.time_range AS "Summary_Range"\
summary.mod_time AS "Updated"\
summary.earliest_time AS "Min_Time"\
summary.latest_time AS "Max_Time"\
summary.is_inprogress AS "Summary_in_Progress"\
| eval Status=round(Status*100,2).\"%\"\
    | eval "Size_on_Disk_(Mb)"=round('Size_on_Disk_(Mb)'/1024/1024,2)\
| eval Data_Model=\"$Data_Model$\" \
| eval Acceleration_Retention=\"$Acceleration_Retention$\" \
| eval App=\"$App$\" \
| eval Acceleration=\"$Acceleration$\" \
| eval Cron=\"$Cron$\"" \
| eval Now_Time=now() \
| eval Lag_Seconds=Now_Time-Max_Time \
| eval Lag_Minutes=round(Lag_Seconds/60,1) \
| eval Lag_Hours=round(Lag_Minutes/60,1) \
| table Data_Model Size_on_Disk_(Mb) \
| sort -Size_on_Disk_(Mb)

[Top Accelerations by Complete Status]
alert.track = 0
search = | rest /servicesNS/-/-/data/models splunk_server=local search="acceleration=* eai:acl.app=SplunkAppForWebAnalytics" \
| rename "acceleration.earliest_time" as Acceleration_Retention "eai:acl.app" as App "acceleration.cron_schedule" as Cron "acceleration" as Acceleration title AS Data_Model \
| table Data_Model App Acceleration Cron Acceleration_Retention updated \
| eval Cron=if(isnull(Cron),"",Cron) \
| map maxsearches=30 \
    search="| rest /servicesNS/nobody/$App$/admin/summarization/tstats:DM_$App$_$Data_Model$ splunk_server=local | fields summary* \
| rename summary.access_count AS "Access_Count" \
summary.access_time AS "Last_Access"\
summary.buckets AS "Buckets"\
summary.complete AS "Status"\
summary.size AS "Size_on_Disk_(Mb)"\
summary.last_error AS "Last_Error"\
summary.time_range AS "Summary_Range"\
summary.mod_time AS "Updated"\
summary.earliest_time AS "Min_Time"\
summary.latest_time AS "Max_Time"\
summary.is_inprogress AS "Summary_in_Progress"\
| eval Status=round(Status*100,2)\
| eval "Size_on_Disk_(Mb)"=round('Size_on_Disk_(Mb)'/1024/1024,2)\
| eval Data_Model=\"$Data_Model$\" \
| eval Acceleration_Retention=\"$Acceleration_Retention$\" \
| eval App=\"$App$\" \
| eval Acceleration=\"$Acceleration$\" \
| eval Cron=\"$Cron$\"" \
| eval Now_Time=now() \
| eval Lag_Seconds=Now_Time-Max_Time \
| eval Lag_Minutes=round(Lag_Seconds/60,1) \
| eval Lag_Hours=round(Lag_Minutes/60,1) \
| fieldformat Min_Time=strftime(Min_Time, "%d/%m/%Y %H:%M:%S") \
| fieldformat Max_Time=strftime(Max_Time, "%d/%m/%Y %H:%M:%S") \
| fieldformat Now_Time=strftime(Now_Time, "%d/%m/%Y %H:%M:%S") \
| table Data_Model Status

[Generate user sessions]
search = eventtype=pageview site=* \
| eval time=_time \
| eval http_referer = _time."_".http_referer \
| eval http_referer_domain = _time."_".http_referer_domain \
| eval http_referer_hostname = _time."_".http_referer_hostname \
| fields _time time http_referer http_referer_domain http_referer_hostname site clientip http_user_agent http_request \
| transaction site clientip http_user_agent maxpause=30m maxspan=4h keepevicted=f \
| eval user=md5(clientip."_".http_user_agent) \
| eval http_session=md5(clientip."_".http_user_agent."_"._time) \
| stats first(site) as site,first(user) as user, first(time) AS http_session_start, last(time) AS http_session_end,count(http_request) AS http_session_pageviews,first(duration) as http_session_duration,first(http_referer) as http_session_referrer,first(http_referer_domain) as http_session_referrer_domain,first(http_referer_hostname) as http_session_referrer_hostname by _time,http_session \
| search user=* \
| eval http_session_referrer=replace(http_session_referrer,"^[0-9\.]*_","") \
| eval http_session_referrer_domain=if(http_session_referrer="-","-",replace(http_session_referrer_domain,"^[0-9\.]*_","")) \
| eval http_session_referrer_hostname=if(http_session_referrer="-","-",replace(http_session_referrer_hostname,"^[0-9\.]*_","")) \
| lookup WA_channels Hostname AS http_session_referrer_hostname OUTPUT Channel AS http_session_channel \
| eval http_session_channel=if(http_session_referrer="-","Direct", if(like(site,"%".http_session_referrer_domain),"Direct", if(isnull(http_session_channel) AND isnotnull(http_session), "Referal", http_session_channel))) \
| table acceleration,datamodel_update_time,count,_time,site,user,http_session,http_session_start,http_session_end,http_session_pageviews,http_session_duration,http_session_referrer,http_session_referrer_domain,http_session_referrer_hostname,http_session_channel \
| outputlookup WA_sessions createinapp=true
